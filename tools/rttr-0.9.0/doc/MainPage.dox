/************************************************************************************
*                                                                                   *
*   Copyright (c) 2014 Axel Menzel <info@axelmenzel.de>	                            *
*                                                                                   *
*   This file is part of RTTR (Run Time Type Reflection)                            *
*   License: MIT License                                                            *
*                                                                                   *
*   Permission is hereby granted, free of charge, to any person obtaining           *
*   a copy of this software and associated documentation files (the "Software"),    *
*   to deal in the Software without restriction, including without limitation       *
*   the rights to use, copy, modify, merge, publish, distribute, sublicense,        *
*   and/or sell copies of the Software, and to permit persons to whom the           *
*   Software is furnished to do so, subject to the following conditions:            *
*                                                                                   *
*   The above copyright notice and this permission notice shall be included in      *
*   all copies or substantial portions of the Software.                             *
*                                                                                   *
*   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR      *
*   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,        *
*   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE     *
*   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER          *
*   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,   *
*   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE   *
*   SOFTWARE.                                                                       *
*                                                                                   *
*************************************************************************************/

/*
@file     Mainpage.h
@author   Axel Menzel
@brief    Contains development documentation for the RTTR Project
*/

// This file contains only comments for doxygen

/*!
\mainpage RTTR - Run Time Type Reflection
\tableofcontents
\section intro Introduction
The _run time type reflection_ (RTTR) library adds the missing feature of reflection to C++. <br>
That means the programmer can introspect an object at runtime of what kind of properties, methods and constructors it consist.<br>
This is extremely useful when a tight but also high dynamic coupling between software modules is required.<br>
The main use cases are for example serialisation, UI creation, binding to arbitrary programming languages (JavaScript, Lua etc.) and network communication.

It works without any extra preprocess pass to reflect your type, only standard C++11 language features are used.<br>
However, in order to reflect your types it is required to manually register your classes with its properties and methods. <br>
While registering methods it is usually not necessary to know the exact signature, since the library <br>
will generate a wrapper class for this depending on the compile-time type of the method.<br>
In order to avoid header pollution, the registration process should be done completely in the cpp file. There is no need to derive from some super base class.

RTTR is released under the terms of the \ref page_license "MIT license".

\section features Features
RTTR supports:
- a faster and across shared libraries working replacement of rtti
- classes; with single-, multiple- and virtual-inheritance (requires one macro placement inside class)
- constructors (arbitrary argument count)
- properties
- methods (virtual, abstract, overloaded, arbitrary argument count)
- enums (C++11 enum class)
- arrays (incl. raw-arrays; arbitrary dimension count)
- ability to invoke properties and methods of classes from any arbitrary class level
- no header pollution; the reflection information is created in the cpp file to minimize compile time when modifying the data
- working with custom types without the need of having the declaration of the type available at compile time (useful for plugins)
- possibility to add additional metadata to all reflection objects
- adjust binding behaviour through return value policies
- minimal macro usage
- no exceptions (this feature come with <a target="_blank" href=http://preshing.com/20110807/the-cost-of-enabling-exception-handling/>cost</a> and is also regularly disabled on consoles)
- no external compiler or tool needed, only standard ISO C++11

\section portability Portability
RTTR is compiled and tested on following platforms:
- Microsoft Visual C++ 12 (2013) x32 and x64
- gcc 4.8.1 x32 and x64

<hr>

\section content Content
- \ref page_tutorial
  - \ref declare_types
    - \ref declare_simple_types
    - \ref declare_class_hierarchies
    - \ref declare_types_use_type
    - \ref declare_rttr_cast
  - \ref binding_types
    - \ref binding_types_hello_world
    - \ref binding_types_methods
    - \ref binding_types_properties
    - \ref binding_types_enums
    - \ref binding_types_variant
    - \ref binding_types_classes
    - \ref binding_types_meta_data
    - \ref binding_types_policies
- \ref page_license

<hr>

\section acknowledgements Acknowledgements
The following persons has been very helpful:
- Ville Voutilainen, for reviewing and improving the code base
- Paul Mensonides, for given me an introduction in preprocessor metaprogramming


*/

/*!
 * @namespace rttr
 * @brief The namespace for all rttr components
 */
